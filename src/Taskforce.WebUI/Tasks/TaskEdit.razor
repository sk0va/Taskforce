@page "/tasks/{TaskId:guid}/edit"

@using Taskforce.Db.Tasks
@using Taskforce.Domain.Tasks

@using Taskforce.WebUI.Tasks
@using AutoMapper;

@inject NavigationManager nm;
@inject IEntityQuery<Domain.Tasks.Task> query
@inject ICommandLauncher commandLauncher

@inject IMapper _mapper;

<TaskForm Task="_task" OnSubmit="HandleValidSubmit"></TaskForm>

@code { 
    [Parameter]
    public Guid TaskId { get; set; }

    private TaskModel _task;

    protected override async System.Threading.Tasks.Task OnInitializedAsync()
    {
        var spec = new TaskSpecification();
        spec.ById(TaskId);

        var task = (await query.GetListAsync(spec, default))?.FirstOrDefault();
        _task = _mapper.Map<TaskModel>(task);
    }

    private async System.Threading.Tasks.Task HandleValidSubmit()
    {
        @* var command = new UpdateTaskCommand
        {
            CommandId = Guid.NewGuid(),
            TaskId = _task.Id,
            
            Title = _task.Title,
            Description = _task.Description,
            DueDate = _task.DueDate,
        }; *@

        var command = _mapper.Map<UpdateTaskCommand>(_task);
        await commandLauncher.Run(command, default);
        nm.NavigateTo("tasks");
    }
}
